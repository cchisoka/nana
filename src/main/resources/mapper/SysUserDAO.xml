<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhuxl.cc.nana.dao.SysUserDAO">
  <resultMap id="BaseResultMap" type="com.zhuxl.cc.nana.model.domain.SysUser">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, user_name, `password`, phone_number, email, nick_name, create_time, update_time,
    is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.zhuxl.cc.nana.model.domain.SysUser" useGeneratedKeys="true">
    insert into sys_user (user_name, `password`, phone_number,
      email, nick_name, create_time,
      update_time, is_delete)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.zhuxl.cc.nana.model.domain.SysUser" useGeneratedKeys="true">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhuxl.cc.nana.model.domain.SysUser">
    update sys_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhuxl.cc.nana.model.domain.SysUser">
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>


  <select id="selectUserByCon" parameterType="com.zhuxl.cc.nana.model.query.SysUserSearch" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    <where>
      <if test="userName != null">
        and user_name = #{userName}
      </if>
      <if test="phoneNumber != null">
        and phone_number = #{phoneNumber}
      </if>
      <if test="email != null">
        and email = #{email}
      </if>
    </where>
  </select>

  <select id="selectPermissionByUserId" resultType="com.zhuxl.cc.nana.model.domain.SysMenu">
    select
      t5.menu_id,
      t5.pid,
      t5.menu_name,
      t5.code,
      t5.menu_type,
      t5.url,
      t5.create_time,
      t5.update_time
    from sys_user t1, sys_user_role t2, sys_role t3, sys_role_menu t4,sys_menu t5
    where t1.user_id = t2.user_id
    and t2.role_id = t3.role_id
    and t3.role_id = t4.role_id
    and t4.menu_id = t5.menu_id
    and t1.user_id = #{userId}
  </select>
</mapper>
